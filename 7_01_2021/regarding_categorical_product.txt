
(This essay is in response to this prompt:

C. 
Consider the category of sets. Let X and Y be two sets. The Cartesian product

X ⨉ Y = {(x,y) | x in X, y in Y}

is another set. Moreover this has the following property: given any other set Z and two functions f: Z —> X and g: Z —> Y, there is a unique function h: Z —> X ⨉ Y such that pr_X . h = f and pr_Y . h = g; here, pr_X: X ⨉ Y —> X and pr_Y: X ⨉ Y —> Y are the projection maps. (One might say that some diagram commutes…) Compare this with the notion of a categorical product. 

Conversely, the disjoint union X ⊔ Y satisfies the following property: given any other set Z, and two functions i: X —> Z and j: Y —> Z, there is a unique function k: X ⊔ Y —> Z such that k . incl_X = i and k . incl_Y = j; here, incl_X: X —> X ⊔ Y and incl_Y: Y —> X ⊔ Y are the inclusion maps. Compare this with the notion of a categorical coproduct.

There are two things to check: that there is a map, and that it is unique. It is somehow so tautological that the proof might be hard.

)

When I was a kid, there was a ``puzzle'' or ``paradox'', possibly inspired by superhero stories,
asking what would happen, if an unstoppable force met an immovable obstacle.
(https://en.wikipedia.org/wiki/Irresistible_force_paradox)
I don't remember whether it was my older cousin who told it to me, but it might have been, and let's say it was.
It was a bit cruel (kids are often a bit cruel to each other), or at least, it felt a bit cruel to me.
When my cousin asked the question,
they subtly implied that the answer was either one or the other (as it turns out, a false dichotomy),
and that the question was a matter of taste (it is not a matter of taste; in contrast, ``Who's your favorite superhero?'' is a question that is a matter of taste).
Then whichever side I picked, my cousin would talk about the opposite side's guarantee,
building up their specified superpower by using emphasis and superlatives,
saying things like ``but this force is ABSOLUTELY UNSTOPPABLE'',
until I felt bullied into switching my answer.

For me, the key to eventually understanding what was going on was to stop narrowly trying to work forward from the stipulated qualities, or narrowly trying to work backward from one or the other (presumed) possibly-correct answers, but instead to relax and think about a large grid of "when <this> bumps <that>, what happens?", possibly with little xkcd-style illustrations in each cell.
(something like https://xkcd.com/2043/ or https://xkcd.com/1890/)

I think of this as ``naturalistic'' thinking, your mind having a gentle and wide grip rather than a narrow tight focus. The idea is that we are collecting flower-theorems from this entire field, all of which are valuable.

The quality of "unstoppableness" is like circling a row and saying that everywhere in this row, the bumper overcomes the bumpee.
The quality of "irresistablenesss" is like circling one column and saying that everywhere in this column, the bumpee stops the bumper.
The grid and the circling can resolve the paradox.
In this case, the resolution is that the puzzle setter has contradicted themselves.

There's a similar puzzle, the https://en.wikipedia.org/wiki/Teumessian_fox,
regarding a dog, Laelaps, who is guaranteed to succeed in catching everything it hunts,
and a fox, who is guaranteed to evade any pursuer,
which I mention because the resolution to the puzzle is different
(the hunt must be a procedure that does not terminate).

Turing's halting problem and Cantor's proof of the uncountability of real numbers are
more arguments which I think of as flowing from this ``think about the whole grid of...''
heuristic.

In group theory, the identity satisfies the law that for all x, x * e = e * x = e.
Suppose that there was another element e2 which also satisfied a law that for all x, x * e2 = e2 * x = e2.
Satisfying this property means there is a whole row (the e2 row) and a whole column (the e2 column) filled with e2 in the multiplication table of the group.
Of course, there is also a whole row (the e1 row) and a whole column (the e1 column) filled with e1.
What happens when they intersect?

Here again the resolution is different, the four products e{1,2} * e{1,2} can all be equal to e1 and also all be equal to e2, if and only if e1 is equal to e2.

e1 = e{1,2} * e{1,2} = e2

In category theory, an initial object, 0,  satisfies the law that for all objects x there exists a unique map 0 -> x. What if there were two initial objects, 01 and 02?
Then we could draw a grid of all the hom(x, y), and look at the rows and columns involving 01 and 02.
The way I draw it, the whole row of 01 is filled with singleton hom(01, y) sets,
and the whole row of 02 is filled with singleton hom(02, y) sets.
Looking down the columns, we don't know much - except of course where they intersect the rows.

For all four 0{1,2} -> 0{1,2} there is a unique map,
and we know some 01->01 and 02->02 maps, the identity maps, already.
So 01 -> 02 composed with 02 -> 01 must yield the identity map id 01: 01 -> 01,
and 02 -> 01 composed with 01 -> 02 must yield the identity map id 02: 02 -> 02.
That is, we use the two object's guarantees (their posited superpowers) to obtain an isomorphism between them.

The resolution of the argument regarding cartesian product and categorical product is close to the group-identities-must-be-equal and the initial-objects-must-be-equal
argument - we end up with the cartesian product and categorical product being isomorphic.

During the course of the argument, we need to hold the cartesian product and categorical product as
if they are distinct. But the similarity of the concepts means that its easy to be confused,
both as proof-writer and proof-reader, and (due to the similarity of the concepts) they also have 
similar names, which also makes it confusing.

Definition of Cartesian Product: Given X, Y sets, Decartes X Y = {(x,y) | x in X, y in Y}. End Definition.

Theorem (stated without proof), the universal property of Cartesian Product:

Given any other set Z and two functions f: Z —> X and g: Z —> Y,
there is a unique function h: Z —> Decartes X Y
such that h; pr X = f and h; pr Y = g.
Here pr X: Decartes X Y —> X and pr Y: Decartes X Y —> Y are the projection maps.

End Theorem.


Definition of Categorical Product (reworded from Wikipedia):

Fix a category C. Let X1 and X2 be objects of C. A product of X1 and X2 is an object Cross X1 X2,
with a pair of arrows p1: Cross X1 X2 -> X1, p2: Cross X1 X2 -> X2
such that
for every object Y and every pair of arrows f1: Y -> X1, f2: Y -> X2,
there exists a unique morphism f: Y -> Cross X1 X2 such that
f; p1 = f1
and 
f; p2 = f2

End Definition.

Theorem (stated without proof): Set has categorical products.

Theorem: The Categorical Product is isomorphic to the Cartesian Product in Set.

Proof:

We have X, Y sets. We want to show that Decartes X Y is isomorphic to Cross X Y.
We take 1. Decartes X Y,
2. the cartesian projection decartesP 1: Decartes X Y -> X and
3. the cartesian projection decartesP 2: Decartes X Y -> Y
and use them with Cross X Y's guarantee to get
4. a unique arrow dc: Decartes X Y -> Cross X Y
such that
5. dc; crossP 1 = decartesP 1
and
6. dc; crossP 2 = decartesP 2

We take 7. Cross X Y,
8. the cross projection crossP 1: Cross X Y -> X and
9. the cross projection crossP 2: Cross X Y -> Y
and use them with Decartes X Y's guarantee to get
10. a unique arrow cd: Cross X Y -> Decartes X Y
such that
11. cd; decartesP 1 = crossP 1
and
12. cd; decartesP 2 = crossP 2

We take 13. Decartes X Y, decartesP 1 and decartesP 2,
and use them with Decartes X Y's guarantee to get
14. a unique arrow dd: Decartes X Y -> Decartes X Y
such that
15. dd; decartesP 1 = decartesP 1
16. dd; decartesP 2 = decartesP 2

We know another arrow, id (Decartes X Y), which has those properties (15 and 16)
but dd was guaranteed to be unique (14) and so dd equals id.

Consider dc; cd.

17.

dc; cd; decartesP x
= (by cd's guarantee. 11 or 12)
dc; crossP x
= (by dc's guarantee, 5 or 6)
decartesP x

We know another arrow, dd = id which has those properties (17), 
but it was guaranteed to be unique (4)
and so dc; cd = dd = id.

By symmetrical argument, cd; dc = id. Therefore Decartes X Y is isomorphic to Cross X Y.

QED

Before spending time thinking about it, I worried that substituting isomorphic objects for each other
might be ``visible'' in some sense via arrow composition maybe distant from the isomorphic objects. This is
an argument that we are licensed by an isomorphism to do ``surgery'' on the set of objects of a category,
collapsing pairs of isomorphic objects into one another.

Given a category X, and a pair of purportedly distinct objects in it named Decartes and Cross,
and arrows dc: Decartes -> Cross and cd: Cross -> Decartes, 
such that dc; cd = id and cd; dc = id, let's try to make two new categories:
1. X Minus Decartes, which has almost all the objects and arrows in it that X had,
but doesn't have Decartes or any arrows that start or end at Decartes.
2. X Minus Cross, which has almost all the objects and arrows in it that X had,
but doesn't have Cross or any arrows that start or end at Cross.

Can we define a functor from X to X Minus Decartes?
Yes, everything stays where it is, except for the things that got dropped need to be fixed up.
Decartes goes to Cross, and arrows that started or ended at Decartes get pre or post composed with
the distinguished arrows dc and cd.
Let's call this the fixup map from X to X Minus Decartes.

Is fixup a functor? Yes.

Proof:
Suppose we had a1; a2 = a3 in X.

Consider fixup a1; fixup a2.
There are a few cases according to whether a1 or a2 or both had source or target or both equal to Decartes,
but they're all very similar.

We use braces and commas to express a set of alternative strings (https://www.linuxjournal.com/content/bash-brace-expansion),
for example {a,b}-hello-{2,3} expands to the four strings a-hello-2, a-hello-3, b-hello-2, b-hello-3

fixup a1; fixup a2
= (by definition of fixup)
{ cd, id }; a1; { cd;dc, id }; a2; { dc, id }          
= (since cd; dc = id)
{ cd, id }; a1; a2; { dc, id }                                          
= (since a1; a2 = a3)
{ cd, id }; a3; { dc, id }                                               
= (by definition of fixup, reversed)
fixup a3                                                              

We have shown that a1; a2 = a3 implies fixup a1; fixup a2 = fixup a3. So fixup is a functor.
QED

The inclusion from X Minus Decartes back to X is also a functor, which we might call iota.

Proof:
If a1; a2 = a3 in X Minus Decartes, then iota a1; iota a2 = iota a3 in X,
because we didn't add or change any arrow compositions,
we only dropped some to create X Minus Decartes.
QED


Is there a natural transformation from fixup; iota to id?

What does it mean to say there is a natural transformation from fixup; iota to id?
There exists an n: objects of X to arrows of X
such that if you take a generic arrow a of X
then this square commutes:

(fixup; iota) a; n (target a) = n (source a); (fixup; iota) a

Fixup followed by iota slides arrows that might start or finish at Decartes to arrows that instead start or finish at Cross.
So in order for the types to match up, n should take objects to endo-arrows,
except Decartes, which should go to an endo-arrow on Cross.
Let's try defining n to take everything to its own identity arrow,
except Decartes, which will go to Cross's identity arrow. 

This n turns out to be a natural transformation from fixup; iota to id.

Proof:
(fixup; iota) a; n (target a)
= (by definition of composition)
iota (fixup a); n (target a)
= (by definition of fixup)
iota ({ 1, cd }; a; { dc, 1 }); n (target a)               
= (because iota is an inclusion)
{ 1, cd }; a; { dc, 1 }; n (target a)                       
= (by definition of n)
{ 1, cd }; a; { dc, 1 }; { id Cross, 1 }
=
{ 1, cd }; a; { dc, 1 }
=
{ 1, id Cross }; { 1, cd }; a; { dc, 1}
= (because iota is an inclusion)
{ 1, id Cross }; iota ({ 1, cd }; a; { dc, 1 })
= (by definition of fixup, reversed)
{ 1, id Cross }; iota (fixup a)
= (by definition of composition, reversed)
{ 1, id Cross }; (fixup; iota) a                                                          
= (by definition of n, reversed)
n (source a); (fixup; iota) a
QED

Is there a natural transformation from iota; fixup to 1? Yes.

Proof:
iota; fixup is an inclusion followed by a function which is the identity on the image of the inclusion,
so it's equal to the identity already.
QED

Moreover, these natural transformations are actually natural isomorphisms; they always take objects to identity arrows, and identity arrows are always isomorphisms. So X is actually equivalent to X Minus Decartes.

We haven't actually used anything specific about Decartes in these two conclusions, so we also have the analogous maps from C to C Minus Cross and from C Minus Cross back to C.

So X Minus Decartes is equivalent as a category to X Minus Cross; it's not possible to ``see'' the substitution from a distance via the arrow composition relationship.
