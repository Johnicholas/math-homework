1. I find it important and very helpful to think about the types of things. That is, giving even/oddness of elements in a single group G amounts to giving a homomorphism—read, function—f: G —> Z/2Z. All this really allows you to do is distinguish between different elements of G in perhaps a somewhat efficient way. For instance, 0 is not 1 in Z/2Z!

	2. On the other hand, one can imagine giving a functor F: Groups —> Set that assigns a group G to the set Hom(G,Z/2Z) of all group homomorphisms from G to the cyclic group Z/2Z on two elements. This in some sense asks you to consider the set of all ways you can assign even/odd to all groups in some compatible way. In particular, this allows you to perhaps distinguish between groups in an efficient way: Z/3Z is not the same as Z/2Z, for instance!

	3. In particular, it is the latter process that allows you to distinguish between complicated things using simpler invariants. But even that may come in flavours of varying complexity. That is, consider the process of assigning and extracting invariants to, say, topological spaces. This is often a rule that allows you to assign to any topological space T some other object inv(T), where inv(T) is hopefully something easier or more concrete. The only requirement for something to be an invariant is that if S and T are two topological spaces which are homeomorphic—or perhaps some other notion of equivalence…!—then you better have inv(S) = inv(T).
	For instance, you inv(T) might be the topological Euler characteristic of T, or else it might be something more sophisticated, like the fundamental group of T. In the first case, you have a rule which might be thought of as a function 
	χ: Ob(Top) —> 𝐙 
from the set of (objects in the category of) topological spaces; in the second case, you have a rule which might be thought of as a functor
	π₁: Top —> Group
from the category of topological spaces to the category of groups.

	4. A presheaf on a category C is another name for a contravariant functor F: C —> Set. As you pointed out, the prefix pre is meant to signify that upon adding more requirements on F, we have some object we might call a sheaf. A sheaf is a presheaf in which we can “glue” values of F together. But to make sense of that, you have to specify what this glueing is supposed to mean. Let’s talk about that below.

	5. A fun exercise toward diagrammatics would be to try to prove some basic things in category theory using just properties of diagrams. Namely, one can formulate many results in category theory by saying that such and such is a universal thing. See the page on universal properties. Two examples to come below.

Some things to think about:

	A. Think about some examples of invariants you can assign to things, say on spaces, groups, etc. Make sense of them as functions, functors, etc. To begin, here are some suggestions:
	- the determinant of a matrix, 
	- the characteristic polynomial of a matrix, 
	- the set of spanning trees of a graph, 
	- the fundamental group of a graph, 
	- the number of connected components of a topological space, 
	- the set of connected components of a topological space,
	- ...

	B. Towards making sense of a sheaf. Let X be your favourite topological space. Let C be the category whose objects are the open subsets of X, and whose arrows are inclusion relations. That is, given two open subsets U and V of X, viewed as objects of C, 
	
	Hom_C(U,V) is empty if U is not contained in V, and
			      is a single arrow if U is contained in V.

Think about what the data of a presheaf amounts to here. See if you can carefully formulate what it ought to mean to be able to glue values of a presheaf. (Think of covering an open set with smaller opens, specifying something on each of the smaller opens so that things are equal on overlaps. Think also of the triangle Escher-esque example we talked about!)

C. Consider the category of sets. Let X and Y be two sets. The Cartesian product

X ⨉ Y = {(x,y) | x in X, y in Y}

is another set. Moreover this has the following property: given any other set Z and two functions f: Z —> X and g: Z —> Y, there is a unique function h: Z —> X ⨉ Y such that pr_X . h = f and pr_Y . h = g; here, pr_X: X ⨉ Y —> X and pr_Y: X ⨉ Y —> Y are the projection maps. (One might say that some diagram commutes…) Compare this with the notion of a categorical product. 

Conversely, the disjoint union X ⊔ Y satisfies the following property: given any other set Z, and two functions i: X —> Z and j: Y —> Z, there is a unique function k: X ⊔ Y —> Z such that k . incl_X = i and k . incl_Y = j; here, incl_X: X —> X ⊔ Y and incl_Y: Y —> X ⊔ Y are the inclusion maps. Compare this with the notion of a categorical coproduct.

There are two things to check: that there is a map, and that it is unique. It is somehow so tautological that the proof might be hard.

When I was a kid, there was a ``puzzle'' or ``paradox'', possibly inspired by superhero stories,
asking what would happen, if an unstoppable force met an immovable obstacle.
(https://en.wikipedia.org/wiki/Irresistible_force_paradox)
I don't remember whether it was my older cousin who told it to me, but it might have been.
It was a bit cruel (kids are often a bit cruel to each other), or it felt a bit cruel to me.
My cousin, or whoever was acting as the puzzle setter would ask the question as if the answer was one or the other, as if it were a matter of taste. 
Then whichever side the puzzle answerer picked, the puzzle setter would talk about the opposite side's guarantee, building up their power, until the puzzle answerer was bullied into switching their answer. 
This kind of thing goes back to https://en.wikipedia.org/wiki/Teumessian_fox

For me, the key to resolving it to stop trying to work out consequences of the superpowers (stop thinking as if were a superhero think about a large grid explaining "when X bumps Y, what happens?", possibly with little xkcd-style illustrations in each cell.
Not like: https://xkcd.com/2420/ that's charting verbs along rows and nouns along columns.
More like: https://xkcd.com/2313/ where the same things are along rows and along columns.

The quality of "unstoppableness" is like circling a row and saying that everywhere in this row, the bumper overcomes the bumpee.
The quality of "irresistablenesss" is like circling one column and saying that everywhere in this column, the bumpee stops the bumper.
The grid and the circling shifts the focus from the superhero context,
and allows you to see in abstract that the puzzle setter has contradicted themselves.

This "make a grid of everything interacting with everything" is a thinking tool, and it can be applied to these kinds of situations.


In group theory, the identity satisfies the law that for all x x * e = e * x = e.
Suppose that there was another element e2 which also satisfied the law that for all x, x * e2 = e2 * x = e2.
Satisfying this property means there is a whole row (the e2 row) and a whole column (the e2 column) filled with e2 in the multiplication table of the group.
Of course, there is also a whole row (the e1 row) and a whole column (the e1 column) filled with e1.
What happens when they intersect?
Unlike the "you have contradicted yourself" of the irresistable force paradox, 
the four products e{1,2} * e{1,2} can all be equal to e1 and also all be equal to e2 - if e1 equals e2.

In category theory, an initial object, 0,  satisfies the law that for all x there exists a unique map 0 -> x.
What if there were two initial objects, 01 and 02?
Then we could draw a grid of all the hom(x, y), and look at the rows and columns 01 and 02.
There exists a unique map 01 -> 02 and a unique map 02 -> 01.
If we compose them, we get a map 01 -> 01 and a map 02 -> 02.
We already knew of maps 01 -> 01 and 02 -> 02, the identity maps,
and they're unique - so 01 -> 02 composed with 02 -> 01 yields the identity map 01 -> 01,
and 02 -> 01 composed with 01 -> 02 yields the identity map 02 -> 02.
That is, we use the two object's guarantees (their posited superpowers) to yield an isomorphism between them.

X ⨉ Y = {(x,y) | x in X, y in Y}

is another set. Moreover this has the following property: given any other set Z and two functions f: Z —> X and g: Z —> Y, there is a unique function h: Z —> X ⨉ Y such that pr_X . h = f and pr_Y . h = g; here, pr_X: X ⨉ Y —> X and pr_Y: X ⨉ Y —> Y are the projection maps. (One might say that some diagram commutes…) Compare this with the notion of a categorical product. 

So the skeleton of the argument regarding cartesian products and categorical products
is similar to these previous arguments.
Given some setup, we obtain a guarantee of a unique map to the cartesian product,
and also given some setup, we obtain a guarantee of a unique map to the product,
and consequently we can obtain an isomorphism between the cartesian and categorical products.
The problems are:
1. the things that we are manipulating seem very similar (we're showing that they're isomorphic, and it's not a surprising isomorphism),
2. the things are named similarly (because mathematicians named them, knowing that they were similar).
3. set theory is never very clear; axiomatic set theory ZFC isn't actually what mathematicians normally do.

We can't get them to seem similar (since we're showing that they're isomorphic; they are very similar).
Let's at least call them more distinctly. Let's call the two objects in question Decartes and Cross.

Lemma: There's only one arrow from one to the other; let's name them Decartes->Cross and Cross->Decartes
(since there's only one arrow, naming the arrow after the type is unambiguous); Decartes->Cross is the arrow
produced by Cross's guarantee. Cross->Decartes is the arrow produced by Decartes's guarantee.

1. Suppose for the sake of argument that Decartes was not isomorphic to Cross
then then we would have a witness to that non-isomorphism,
some ``observable'' consequence somewhere elsewhere in the category.
What would that even look like?

Well, there would be a pair of arrows that compose to one thing if Decartes
is used and compose to another thing if Cross was substituted for Decartes?
What does that even mean?

Well, let's imagine a category MinusDecartes where we delete Decartes as an object entirely
(we can drop an object and all of its arrows to and from it and we still have a category).
and another category MinusCross where we delete Cross as an object entirely.

So if we have an observable consequence,
we have a pair of arrows in MinusDecartes,
and they compose to something,
and they either either compose to something different,
or do not compose, or are not present, or something bad happens in the MinusCross category.

But if they 




Well, there would be a pair of arrows that compose to one thing if Decartes is used,
and compose to another thing if Cross is substituted for Decartes.
What does that even mean?

f : X -> Decartes s.t. there does not exist a corresponding g : X -> Cross
f : Decartes -> X s.t. there does not exist a corresponding g : Cross -> X



f ; Decartes -> Cross ; g != 
f ; cart
either f ; 
Then we would have an arrow demonstrating the non-isomorphism


D. Something I came across some time ago that you might enjoy reading, if you have not seen this already: https://jneem.github.io/merging/.




As usual, let me know if you have questions, or things you want me to look at before we meet again next week!

Happy weekend!
Raymond